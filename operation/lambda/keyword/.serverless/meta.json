{
  "/Users/uicheol_hwang/EcomGen/operation/lambda/keyword/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/Users/uicheol_hwang/EcomGen/operation/lambda/keyword/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "keyword-search",
      "provider": {
        "name": "aws",
        "runtime": "python3.11",
        "profile": "cheorish-admin",
        "stage": "v1",
        "region": "ap-northeast-2",
        "timeout": 90,
        "memorySize": 512,
        "environment": {
          "BASE_URL": "https://api.searchad.naver.com",
          "API_KEY": "<REDACTED>",
          "SECRET_KEY": "<REDACTED>",
          "CUSTOMER_ID": "3166270"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "Resource": "arn:aws:logs:ap-northeast-2:*:log-group:/aws/lambda/*"
          }
        ],
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "KeywordResearchLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/keyword-search-v1-keyword-research",
                "RetentionInDays": 14
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "keyword-search",
                          "v1",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/keyword-search-v1*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/keyword-search-v1*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                          ],
                          "Resource": "arn:aws:logs:ap-northeast-2:*:log-group:/aws/lambda/*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "keyword-search",
                      "v1",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "KeywordResearchLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
                  "S3Key": "serverless/keyword-search/v1/1750387505386-2025-06-20T02:45:05.386Z/keyword-search.zip"
                },
                "Handler": "keywords.lambda_handler",
                "Runtime": "python3.11",
                "FunctionName": "keyword-search-v1-keyword-research",
                "MemorySize": 512,
                "Timeout": 90,
                "Description": "네이버 키워드 API Lambda 함수",
                "Environment": {
                  "Variables": {
                    "BASE_URL": "https://api.searchad.naver.com",
                    "API_KEY": "<REDACTED>",
                    "SECRET_KEY": "<REDACTED>",
                    "CUSTOMER_ID": "3166270"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:ap-northeast-2:336392948345:layer:AWSSDKPandas-Python311:9"
                ]
              },
              "DependsOn": [
                "KeywordResearchLogGroup"
              ]
            },
            "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "KeywordResearchLambdaFunction"
                },
                "CodeSha256": "tC+hoHZ925C5OAzGt2y81GT9UR9E2+thVS3+c96kxiA=",
                "Description": "네이버 키워드 API Lambda 함수"
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "v1-keyword-search",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceKeywordDashresearch": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "keyword-research",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodKeywordDashresearchOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceKeywordDashresearch"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodKeywordDashresearchPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceKeywordDashresearch"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "KeywordResearchLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "KeywordResearchLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1750387498998": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "v1"
              },
              "DependsOn": [
                "ApiGatewayMethodKeywordDashresearchOptions",
                "ApiGatewayMethodKeywordDashresearchPost"
              ]
            },
            "KeywordResearchLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "KeywordResearchLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
              "Export": {
                "Name": "sls-keyword-search-v1-ServerlessDeploymentBucketName"
              }
            },
            "KeywordResearchLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw"
              },
              "Export": {
                "Name": "sls-keyword-search-v1-KeywordResearchLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/v1"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-keyword-search-v1-ServiceEndpoint"
              }
            },
            "KeywordResearchApiUrl": {
              "Description": "Keyword Research API URL",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    "ap-northeast-2",
                    ".amazonaws.com/",
                    "v1",
                    "/keyword-research"
                  ]
                ]
              }
            },
            "KeywordResearchLambdaArn": {
              "Description": "Keyword Research Lambda Function ARN",
              "Value": {
                "Ref": "KeywordResearchLambdaFunction"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "keywordResearch": {
          "handler": "keywords.lambda_handler",
          "name": "keyword-search-v1-keyword-research",
          "description": "네이버 키워드 API Lambda 함수",
          "layers": [
            "arn:aws:lambda:ap-northeast-2:336392948345:layer:AWSSDKPandas-Python311:9"
          ],
          "events": [
            {
              "http": {
                "path": "keyword-research",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "package": {},
          "memory": 512,
          "timeout": 90,
          "runtime": "python3.11",
          "vpc": {},
          "versionLogicalId": "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw"
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "layer": false,
          "dockerizePip": false,
          "zip": true,
          "noDeps": [
            "pandas",
            "numpy"
          ]
        }
      },
      "package": {
        "patterns": [
          "!node_modules/**",
          "!.git/**",
          "!.serverless/**",
          "!.pytest_cache/**",
          "!__pycache__/**",
          "!*.pyc",
          "!tests/**",
          "!README.md",
          "!.env",
          "unzip_requirements.py",
          ".requirements.zip"
        ],
        "artifactsS3KeyDirname": "serverless/keyword-search/v1/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
        "artifact": "/Users/uicheol_hwang/EcomGen/operation/lambda/keyword/.serverless/keyword-search.zip",
        "artifactDirectoryName": "serverless/keyword-search/v1/1750387505386-2025-06-20T02:45:05.386Z"
      },
      "resources": {
        "Resources": {
          "KeywordResearchLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/keyword-search-v1-keyword-research",
              "RetentionInDays": 14
            }
          }
        },
        "Outputs": {
          "KeywordResearchApiUrl": {
            "Description": "Keyword Research API URL",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  "ap-northeast-2",
                  ".amazonaws.com/",
                  "v1",
                  "/keyword-research"
                ]
              ]
            }
          },
          "KeywordResearchLambdaArn": {
            "Description": "Keyword Research Lambda Function ARN",
            "Value": {
              "Ref": "KeywordResearchLambdaFunction"
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.11",
      "profile": "cheorish-admin",
      "stage": "v1",
      "region": "ap-northeast-2",
      "timeout": 90,
      "memorySize": 512,
      "environment": {
        "BASE_URL": "https://api.searchad.naver.com",
        "API_KEY": "<REDACTED>",
        "SECRET_KEY": "<REDACTED>",
        "CUSTOMER_ID": "3166270"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents"
          ],
          "Resource": "arn:aws:logs:ap-northeast-2:*:log-group:/aws/lambda/*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "KeywordResearchLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/keyword-search-v1-keyword-research",
              "RetentionInDays": 14
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "keyword-search",
                        "v1",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/keyword-search-v1*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/keyword-search-v1*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:ap-northeast-2:*:log-group:/aws/lambda/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "keyword-search",
                    "v1",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "KeywordResearchLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
                "S3Key": "serverless/keyword-search/v1/1750387505386-2025-06-20T02:45:05.386Z/keyword-search.zip"
              },
              "Handler": "keywords.lambda_handler",
              "Runtime": "python3.11",
              "FunctionName": "keyword-search-v1-keyword-research",
              "MemorySize": 512,
              "Timeout": 90,
              "Description": "네이버 키워드 API Lambda 함수",
              "Environment": {
                "Variables": {
                  "BASE_URL": "https://api.searchad.naver.com",
                  "API_KEY": "<REDACTED>",
                  "SECRET_KEY": "<REDACTED>",
                  "CUSTOMER_ID": "3166270"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:ap-northeast-2:336392948345:layer:AWSSDKPandas-Python311:9"
              ]
            },
            "DependsOn": [
              "KeywordResearchLogGroup"
            ]
          },
          "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "KeywordResearchLambdaFunction"
              },
              "CodeSha256": "tC+hoHZ925C5OAzGt2y81GT9UR9E2+thVS3+c96kxiA=",
              "Description": "네이버 키워드 API Lambda 함수"
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "v1-keyword-search",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceKeywordDashresearch": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "keyword-research",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodKeywordDashresearchOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceKeywordDashresearch"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodKeywordDashresearchPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceKeywordDashresearch"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "KeywordResearchLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "KeywordResearchLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1750387498998": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "v1"
            },
            "DependsOn": [
              "ApiGatewayMethodKeywordDashresearchOptions",
              "ApiGatewayMethodKeywordDashresearchPost"
            ]
          },
          "KeywordResearchLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "KeywordResearchLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
            "Export": {
              "Name": "sls-keyword-search-v1-ServerlessDeploymentBucketName"
            }
          },
          "KeywordResearchLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw"
            },
            "Export": {
              "Name": "sls-keyword-search-v1-KeywordResearchLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/v1"
                ]
              ]
            },
            "Export": {
              "Name": "sls-keyword-search-v1-ServiceEndpoint"
            }
          },
          "KeywordResearchApiUrl": {
            "Description": "Keyword Research API URL",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  "ap-northeast-2",
                  ".amazonaws.com/",
                  "v1",
                  "/keyword-research"
                ]
              ]
            }
          },
          "KeywordResearchLambdaArn": {
            "Description": "Keyword Research Lambda Function ARN",
            "Value": {
              "Ref": "KeywordResearchLambdaFunction"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: keyword-search\n\nprovider:\n  name: aws \n  runtime: python3.11\n  profile: cheorish-admin\n  stage: v1\n  region: ap-northeast-2\n  timeout: 90\n  memorySize: 512\n  \n  environment:\n    BASE_URL: ${env:BASE_URL}\n    API_KEY: ${env:API_KEY}\n    SECRET_KEY: ${env:SECRET_KEY}\n    CUSTOMER_ID: ${env:CUSTOMER_ID}\n  \n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - logs:CreateLogGroup\n        - logs:CreateLogStream\n        - logs:PutLogEvents\n      Resource: \n        - \"arn:aws:logs:${self:provider.region}:*:log-group:/aws/lambda/*\"\n\nfunctions:\n  keywordResearch:\n    handler: keywords.lambda_handler\n    name: ${self:service}-${self:provider.stage}-keyword-research\n    description: \"네이버 키워드 API Lambda 함수\"\n    \n    layers:\n      - arn:aws:lambda:ap-northeast-2:336392948345:layer:AWSSDKPandas-Python311:9\n    \n    events:\n      - http:\n          path: /keyword-research\n          method: post\n          cors:\n            origin: '*'\n            headers:\n              - Content-Type\n              - X-Amz-Date\n              - Authorization\n              - X-Api-Key\n              - X-Amz-Security-Token\n              - X-Amz-User-Agent\n            allowCredentials: false\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    layer: false\n    dockerizePip: false\n    zip: true\n    noDeps:\n      - pandas\n      - numpy\n\n\n  \npackage:\n  patterns:\n    - '!node_modules/**'\n    - '!.git/**'\n    - '!.serverless/**'\n    - '!.pytest_cache/**'\n    - '!__pycache__/**'\n    - '!*.pyc'\n    - '!tests/**'\n    - '!README.md'\n    - '!.env'\n\nresources:\n  Resources:\n    # API Gateway 설정\n    KeywordResearchLogGroup:\n      Type: AWS::Logs::LogGroup\n      Properties:\n        LogGroupName: /aws/lambda/${self:service}-${self:provider.stage}-keyword-research\n        RetentionInDays: 14\n\n  Outputs:\n    KeywordResearchApiUrl:\n      Description: \"Keyword Research API URL\"\n      Value:\n        Fn::Join:\n          - \"\"\n          - - \"https://\"\n            - Ref: ApiGatewayRestApi\n            - \".execute-api.\"\n            - ${self:provider.region}\n            - \".amazonaws.com/\"\n            - ${self:provider.stage}\n            - \"/keyword-research\"\n    \n    KeywordResearchLambdaArn:\n      Description: \"Keyword Research Lambda Function ARN\"\n      Value:\n        Ref: KeywordResearchLambdaFunction\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "1b69ca6b-b8de-494b-ac2c-4a96c97d1c9a",
    "orgName": "cheorish",
    "userId": "MnVRkz1ZKqRtlf90Zm",
    "userName": "cheorish",
    "serviceProviderAwsAccountId": "737032696241",
    "serviceProviderAwsCfStackName": "keyword-search-v1",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-northeast-2:737032696241:stack/keyword-search-v1/136401d0-4d7c-11f0-ae8f-02281f6f1d27",
    "serviceProviderAwsCfStackCreated": "2025-06-20T02:12:54.615Z",
    "serviceProviderAwsCfStackUpdated": "2025-06-20T02:38:42.373Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "PythonRequirementsLambdaLayerS3Key",
        "OutputValue": "serverless/keyword-search/v1/1750386734370-2025-06-20T02:32:14.370Z/pythonRequirements.zip",
        "Description": "Current Lambda layer S3Key",
        "ExportName": "sls-keyword-search-v1-PythonRequirementsLambdaLayerS3Key"
      },
      {
        "OutputKey": "PythonRequirementsLambdaLayerQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-northeast-2:737032696241:layer:keyword-search-v1-python-requirements:2",
        "Description": "Current Lambda layer version",
        "ExportName": "sls-keyword-search-v1-PythonRequirementsLambdaLayerQualifiedArn"
      },
      {
        "OutputKey": "PythonRequirementsLambdaLayerHash",
        "OutputValue": "1d283a2d6a45e055765c58b936b38f9d36b62cbf",
        "Description": "Current Lambda layer hash",
        "ExportName": "sls-keyword-search-v1-PythonRequirementsLambdaLayerHash"
      },
      {
        "OutputKey": "KeywordResearchLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-northeast-2:737032696241:function:keyword-search-v1-keyword-research:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-keyword-search-v1-KeywordResearchLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "KeywordResearchLambdaArn",
        "OutputValue": "keyword-search-v1-keyword-research",
        "Description": "Keyword Research Lambda Function ARN"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://tf63jdi73h.execute-api.ap-northeast-2.amazonaws.com/v1",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-keyword-search-v1-ServiceEndpoint"
      },
      {
        "OutputKey": "KeywordResearchApiUrl",
        "OutputValue": "https://tf63jdi73h.execute-api.ap-northeast-2.amazonaws.com/v1/keyword-research",
        "Description": "Keyword Research API URL"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
        "ExportName": "sls-keyword-search-v1-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "KeywordResearchLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/keyword-search-v1-keyword-research",
            "RetentionInDays": 14
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "keyword-search",
                      "v1",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/keyword-search-v1*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/keyword-search-v1*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "arn:aws:logs:ap-northeast-2:*:log-group:/aws/lambda/*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "keyword-search",
                  "v1",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "KeywordResearchLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
              "S3Key": "serverless/keyword-search/v1/1750387505386-2025-06-20T02:45:05.386Z/keyword-search.zip"
            },
            "Handler": "keywords.lambda_handler",
            "Runtime": "python3.11",
            "FunctionName": "keyword-search-v1-keyword-research",
            "MemorySize": 512,
            "Timeout": 90,
            "Description": "네이버 키워드 API Lambda 함수",
            "Environment": {
              "Variables": {
                "BASE_URL": "https://api.searchad.naver.com",
                "API_KEY": "<REDACTED>",
                "SECRET_KEY": "<REDACTED>",
                "CUSTOMER_ID": "3166270"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:ap-northeast-2:336392948345:layer:AWSSDKPandas-Python311:9"
            ]
          },
          "DependsOn": [
            "KeywordResearchLogGroup"
          ]
        },
        "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "KeywordResearchLambdaFunction"
            },
            "CodeSha256": "tC+hoHZ925C5OAzGt2y81GT9UR9E2+thVS3+c96kxiA=",
            "Description": "네이버 키워드 API Lambda 함수"
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "v1-keyword-search",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceKeywordDashresearch": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "keyword-research",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodKeywordDashresearchOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceKeywordDashresearch"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodKeywordDashresearchPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceKeywordDashresearch"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "KeywordResearchLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "KeywordResearchLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1750387498998": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "v1"
          },
          "DependsOn": [
            "ApiGatewayMethodKeywordDashresearchOptions",
            "ApiGatewayMethodKeywordDashresearchPost"
          ]
        },
        "KeywordResearchLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "KeywordResearchLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-ap-northeast-2-a0662356-517f",
          "Export": {
            "Name": "sls-keyword-search-v1-ServerlessDeploymentBucketName"
          }
        },
        "KeywordResearchLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "KeywordResearchLambdaVersionkzJ4LQxoCWcBjHMn0PIcK4Kh4xVVwQqcpretd9Ziw"
          },
          "Export": {
            "Name": "sls-keyword-search-v1-KeywordResearchLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/v1"
              ]
            ]
          },
          "Export": {
            "Name": "sls-keyword-search-v1-ServiceEndpoint"
          }
        },
        "KeywordResearchApiUrl": {
          "Description": "Keyword Research API URL",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                "ap-northeast-2",
                ".amazonaws.com/",
                "v1",
                "/keyword-research"
              ]
            ]
          }
        },
        "KeywordResearchLambdaArn": {
          "Description": "Keyword Research Lambda Function ARN",
          "Value": {
            "Ref": "KeywordResearchLambdaFunction"
          }
        }
      }
    }
  }
}